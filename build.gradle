plugins {
	id 'java'
	id 'org.springframework.boot' version '2.6.7'
	id 'io.spring.dependency-management' version '1.1.0'
	id 'jacoco'
}

group = 'com.techsophy.tsf.commons'
version = '0.0.1-SNAPSHOT'
compileJava {
	sourceCompatibility = 11
	targetCompatibility = 11
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	annotationProcessor 'org.projectlombok:lombok'
	implementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation group: 'org.mockito', name: 'mockito-inline', version: '2.7.21'
	testImplementation group: 'com.github.tomakehurst', name: 'wiremock-jre8', version: '2.27.2'
}

tasks.named('test') {
	useJUnitPlatform()
}

tasks.withType(JavaCompile) {
	options.encoding = 'UTF-8'
}

test {
	finalizedBy jacocoTestReport
	useJUnitPlatform()
}
jacocoTestReport {
	dependsOn test
	reports {
		xml.enabled true
		html.enabled true
	}
}

jar{
	enabled = false
}
jacocoTestCoverageVerification {
	violationRules {
		rule {
			limit {
				minimum = 0.85
			}
		}

	}
}
check.dependsOn jacocoTestCoverageVerification

//Integration test configuration
sourceSets{
	integrationTest {
		java{
			compileClasspath += main.output + test.output
			runtimeClasspath += main.output + test.output
			srcDir file('src/integrationTest/java')

		}
	}
}

configurations {
	integrationTestImplementation.extendsFrom testImplementation
	integrationTestRuntimeOnly.extendsFrom testRuntimeOnly
}


tasks.register('integrationTest', Test) {
	description = 'Runs integration tests.'
	group = 'verification'
	useJUnitPlatform()
	testClassesDirs = sourceSets.integrationTest.output.classesDirs
	classpath = sourceSets.integrationTest.runtimeClasspath
	shouldRunAfter test
	outputs.upToDateWhen { false }
}
check.dependsOn compileIntegrationTestJava
